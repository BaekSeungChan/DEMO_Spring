spring:
  h2:
    console:
      enabled: true # H2 데이터베이스 콘솔을 활성화합니다. 브라우저를 통해 H2 데이터베이스에 접근할 수 있게 해줍니다.
      path: /h2-console # H2 콘솔에 접근하기 위한 경로를 설정합니다. 이 설정을 통해 http://localhost:8080/h2-console 에서 H2 콘솔에 접근할 수 있습니다.

  datasource:
    url: jdbc:h2:~/test; # 데이터베이스 URL을 설정합니다. 여기서는 사용자 홈 디렉토리에 위치한 H2 데이터베이스 'test'에 접근합니다.
    driver-class-name: org.h2.Driver # 사용할 JDBC 드라이버의 클래스 이름을 설정합니다. H2 데이터베이스를 사용하기 위한 드라이버를 지정합니다.
    username: sa # 데이터베이스 접속을 위한 사용자 이름을 설정합니다. H2의 기본 사용자 이름은 'sa'입니다.
    password: # 데이터베이스 접속을 위한 비밀번호를 설정합니다. 여기서는 비밀번호가 설정되지 않았습니다.

  jpa:
    database-platform: org.hibernate.dialect.H2Dialect # JPA를 사용할 때, 데이터베이스 방언을 설정합니다. H2 데이터베이스에 맞는 Hibernate 방언을 지정합니다.
    properties:
      hibernate:
        dialect: org.hibernate.dialect.H2Dialect # Hibernate 설정에서도 데이터베이스 방언을 명시적으로 설정합니다. H2 데이터베이스에 최적화된 방언을 사용합니다.
        show_sql: true # Hibernate가 실행하는 SQL 쿼리를 콘솔에 출력합니다. 개발 중에 유용하게 사용할 수 있습니다.
        format_sql: true # SQL 쿼리의 포맷을 보기 좋게 출력합니다. 쿼리를 더 쉽게 읽을 수 있게 해줍니다.
    hibernate:
      ddl-auto: create-drop # 애플리케이션이 시작될 때 데이터베이스 스키마를 자동으로 생성하고, 애플리케이션이 종료될 때 스키마를 제거합니다. 개발 초기 단계에서 유용하게 사용할 수 있으나, 실제 운영 환경에서는 주의가 필요합니다.
